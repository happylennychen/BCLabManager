<UserControl x:Class="O2Micro.BCLabManager.Shell.View.AllExecutorsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        
        <LinearGradientBrush x:Key="Brush_HeaderBackground" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#66000088" Offset="0" />
            <GradientStop Color="#BB000088" Offset="1" />
        </LinearGradientBrush>
        <CollectionViewSource 
      x:Key="AllGroup" 
      Source="{Binding Path=AllExecutors}"
      >
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Status"/>
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>

        <!--<CollectionViewSource
      x:Key="Batteries" 
      Source="{Binding Path=AllBatteries}"
      />-->
        <GroupStyle x:Key="DataGridGroupStyle">
            <GroupStyle.HeaderTemplate>
                <DataTemplate>
                    <TextBlock 
            x:Name="txt" 
            Background="{StaticResource Brush_HeaderBackground}"
            FontWeight="Bold"
            Foreground="White"
            Margin="5"
            Padding="4,2,0,2"
            Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}" 
            />
                </DataTemplate>
            </GroupStyle.HeaderTemplate>
        </GroupStyle>
        <Style x:Key="ExecutorItemStyle" TargetType="{x:Type DataGridRow}">
            <!-- 
      Stretch the content of each cell so that we can 
      right-align text in the Total Sales column. 
      -->
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>


        <!--DataTemplate for Published Date column defined in Grid.Resources.  PublishDate is a property on the ItemsSource of type DateTime -->
        <DataTemplate x:Key="StartTimeTemplate" >
            <StackPanel Width="20" Height="30">
                <Border Background="LightBlue" BorderBrush="Black" BorderThickness="1">
                    <TextBlock Text="{Binding StartTime, StringFormat={}{0:MMM}}" FontSize="8" HorizontalAlignment="Center" />
                </Border>
                <Border Background="White" BorderBrush="Black" BorderThickness="1">
                    <TextBlock Text="{Binding StartTime, StringFormat={}{0:yyyy}}" FontSize="8" FontWeight="Bold" HorizontalAlignment="Center" />
                </Border>
            </StackPanel>
        </DataTemplate>
        <!--DataTemplate for the Published Date column when in edit mode. -->
        <DataTemplate x:Key="EditingStartTimeTemplate">
            <DatePicker SelectedDate="{Binding StartTime}"  />
        </DataTemplate>
        <!--DataTemplate for Published Date column defined in Grid.Resources.  PublishDate is a property on the ItemsSource of type DateTime -->
        <DataTemplate x:Key="EndTimeTemplate" >
            <StackPanel Width="20" Height="30">
                <Border Background="LightBlue" BorderBrush="Black" BorderThickness="1">
                    <TextBlock Text="{Binding EndTime, StringFormat={}{0:MMM}}" FontSize="8" HorizontalAlignment="Center" />
                </Border>
                <Border Background="White" BorderBrush="Black" BorderThickness="1">
                    <TextBlock Text="{Binding EndTime, StringFormat={}{0:yyyy}}" FontSize="8" FontWeight="Bold" HorizontalAlignment="Center" />
                </Border>
            </StackPanel>
        </DataTemplate>
        <!--DataTemplate for the Published Date column when in edit mode. -->
        <DataTemplate x:Key="EditingEndTimeTemplate">
            <DatePicker SelectedDate="{Binding EndTime}"  />
        </DataTemplate>
        <DataTemplate x:Key="BatteryTemplate">
            <TextBlock Text="{Binding Battery}"></TextBlock>
        </DataTemplate>
        <DataTemplate x:Key="EditingBatteryTemplate">
            <ComboBox 
      ItemsSource="{Binding Path=AllBatteries, Mode=OneTime}"
      SelectedItem="{Binding Path=Battery, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
      Validation.ErrorTemplate="{x:Null}"
      >
            </ComboBox>
        </DataTemplate>
        <DataTemplate x:Key="ChamberTemplate">
            <TextBlock Text="{Binding Chamber}"></TextBlock>
        </DataTemplate>
        <DataTemplate x:Key="EditingChamberTemplate">
            <ComboBox IsEnabled="{Binding Path=IsChamberNeeded}"
      ItemsSource="{Binding Path=AllChambers, Mode=OneTime}"
      SelectedItem="{Binding Path=Chamber, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
      Validation.ErrorTemplate="{x:Null}"
      >
            </ComboBox>
        </DataTemplate>
        <DataTemplate x:Key="TesterTemplate">
            <TextBlock Text="{Binding Tester}"></TextBlock>
        </DataTemplate>
        <DataTemplate x:Key="EditingTesterTemplate">
            <ComboBox 
      ItemsSource="{Binding Path=AllTesters, Mode=OneTime}"
      SelectedItem="{Binding Path=Tester, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
      Validation.ErrorTemplate="{x:Null}"
      >
            </ComboBox>
        </DataTemplate>
        <DataTemplate x:Key="TesterChannelTemplate">
            <TextBlock Text="{Binding TesterChannel}"></TextBlock>
        </DataTemplate>
        <DataTemplate x:Key="EditingTesterChannelTemplate">
            <ComboBox 
      ItemsSource="{Binding Path=AllTesterChannels, Mode=OneTime}"
      SelectedItem="{Binding Path=TesterChannel, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
      Validation.ErrorTemplate="{x:Null}"
      >
            </ComboBox>
        </DataTemplate>
        <Style TargetType="ItemsControl">
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="CommandsTemplate">
            <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="6,2">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Margin="2,6">
            <Button Command="{Binding Path=Command}">
              <TextBlock Text="{Binding Path=DisplayName}" />
            </Button>
          </TextBlock>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </DataTemplate>
        <DataTemplate x:Key="OperationsTemplate">
            <ContentControl Content="{Binding Path=Commands}"
          ContentTemplate="{StaticResource CommandsTemplate}">
            </ContentControl>
        </DataTemplate>
    </UserControl.Resources>
    <DataGrid
      AlternationCount="2" 
      DataContext="{StaticResource AllGroup}" 
      ItemContainerStyle="{StaticResource ExecutorItemStyle}"
      ItemsSource="{Binding}" AutoGenerateColumns="False" >
        <DataGrid.GroupStyle>
            <StaticResourceExtension 
          ResourceKey="DataGridGroupStyle" 
          />
        </DataGrid.GroupStyle>
        <DataGrid.Columns>
            <DataGridTextColumn Header="ID"  Binding="{Binding ExecutorID}" IsReadOnly="True"/>
            <DataGridTextColumn Header="Status" Binding="{Binding Status, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
            <DataGridTextColumn Header="Description" Binding="{Binding Description, UpdateSourceTrigger=LostFocus}" IsReadOnly="False"/>
            <DataGridTemplateColumn Header="Start Time" CellTemplate="{StaticResource StartTimeTemplate}" CellEditingTemplate="{StaticResource EditingStartTimeTemplate}" />
            <DataGridTemplateColumn Header="End Time" CellTemplate="{StaticResource EndTimeTemplate}" CellEditingTemplate="{StaticResource EditingEndTimeTemplate}" />
            <DataGridTemplateColumn Header="Battery" CellTemplate="{StaticResource BatteryTemplate}" CellEditingTemplate="{StaticResource EditingBatteryTemplate}"/>
            <!--<DataGridComboBoxColumn Header="Battery2" ItemsSource="{StaticResource Batteries}"
                                    SelectedItemBinding="{Binding Path=Battery, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"/>-->
            <DataGridTemplateColumn Header="Chamber" CellTemplate="{StaticResource ChamberTemplate}" CellEditingTemplate="{StaticResource EditingChamberTemplate}"/>
            <DataGridTemplateColumn Header="Tester" CellTemplate="{StaticResource TesterTemplate}" CellEditingTemplate="{StaticResource EditingTesterTemplate}"/>
            <DataGridTemplateColumn Header="Tester Channel" CellTemplate="{StaticResource TesterChannelTemplate}" CellEditingTemplate="{StaticResource EditingTesterChannelTemplate}"/>
            <DataGridTextColumn Header="Request ID"  Binding="{Binding RequestID}" IsReadOnly="True"/>
            <DataGridTextColumn Header="Program ID"  Binding="{Binding ProgramID}" IsReadOnly="True"/>
            <DataGridTextColumn Header="SubProgram ID"  Binding="{Binding SubProgramID}" IsReadOnly="True"/>
            <DataGridTextColumn Header="Recipe ID"  Binding="{Binding RecipeID}" IsReadOnly="True"/>
            <DataGridTemplateColumn Header="Operations" CellTemplate="{StaticResource OperationsTemplate}" IsReadOnly="True"/>
            <!--The Email property contains a URI.  For example "mailto:lucy0@adventure-works.com"
            <DataGridHyperlinkColumn Header="Email" Binding="{Binding Email}"  ContentBinding="{Binding Email, Converter={StaticResource EmailConverter}}" />
            <DataGridCheckBoxColumn Header="Member?" Binding="{Binding IsMember}" />
            <DataGridComboBoxColumn Header="Order Status"  SelectedItemBinding="{Binding Status}" ItemsSource="{Binding Source={StaticResource myEnum}}" />-->
        </DataGrid.Columns>
    </DataGrid>
</UserControl>
