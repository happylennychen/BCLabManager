<UserControl x:Class="O2Micro.BCLabManager.Shell.View.AllExecutorsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>

        <LinearGradientBrush x:Key="Brush_HeaderBackground" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#66000088" Offset="0" />
            <GradientStop Color="#BB000088" Offset="1" />
        </LinearGradientBrush>
        <CollectionViewSource
      x:Key="ExecutorGroups" 
      Source="{Binding Path=AllExecutors}"
      >
        </CollectionViewSource>

        <Style x:Key="ExecutorItemStyle" TargetType="{x:Type DataGridRow}">
            <!-- 
      Stretch the content of each cell so that we can 
      right-align text in the Total Sales column. 
      -->
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>


        <!--DataTemplate for Published Date column defined in Grid.Resources.  PublishDate is a property on the ItemsSource of type DateTime -->
        <DataTemplate x:Key="StartTimeTemplate" >
            <StackPanel Width="20" Height="30">
                <Border Background="LightBlue" BorderBrush="Black" BorderThickness="1">
                    <TextBlock Text="{Binding StartTime, StringFormat={}{0:MMM}}" FontSize="8" HorizontalAlignment="Center" />
                </Border>
                <Border Background="White" BorderBrush="Black" BorderThickness="1">
                    <TextBlock Text="{Binding StartTime, StringFormat={}{0:yyyy}}" FontSize="8" FontWeight="Bold" HorizontalAlignment="Center" />
                </Border>
            </StackPanel>
        </DataTemplate>
        <!--DataTemplate for the Published Date column when in edit mode. -->
        <DataTemplate x:Key="EditingStartTimeTemplate">
            <DatePicker SelectedDate="{Binding StartTime}"  />
        </DataTemplate>
        <!--DataTemplate for Published Date column defined in Grid.Resources.  PublishDate is a property on the ItemsSource of type DateTime -->
        <DataTemplate x:Key="EndTimeTemplate" >
            <StackPanel Width="20" Height="30">
                <Border Background="LightBlue" BorderBrush="Black" BorderThickness="1">
                    <TextBlock Text="{Binding EndTime, StringFormat={}{0:MMM}}" FontSize="8" HorizontalAlignment="Center" />
                </Border>
                <Border Background="White" BorderBrush="Black" BorderThickness="1">
                    <TextBlock Text="{Binding EndTime, StringFormat={}{0:yyyy}}" FontSize="8" FontWeight="Bold" HorizontalAlignment="Center" />
                </Border>
            </StackPanel>
        </DataTemplate>
        <!--DataTemplate for the Published Date column when in edit mode. -->
        <DataTemplate x:Key="EditingEndTimeTemplate">
            <DatePicker SelectedDate="{Binding EndTime}"  />
        </DataTemplate>
        <DataTemplate x:Key="BatteryTemplate">
            <ComboBox 
      ItemsSource="{Binding Path=AllBatteries, Mode=OneTime}"
      SelectedItem="{Binding Path=Battery, ValidatesOnDataErrors=True}"
      Validation.ErrorTemplate="{x:Null}"
      >
            </ComboBox>
        </DataTemplate>
        <DataTemplate x:Key="ChamberTemplate">
            <ComboBox 
      ItemsSource="{Binding Path=AllChambers, Mode=OneTime}"
      SelectedItem="{Binding Path=Chamber, ValidatesOnDataErrors=True}"
      Validation.ErrorTemplate="{x:Null}"
      >
            </ComboBox>
        </DataTemplate>
        <DataTemplate x:Key="TesterTemplate">
            <ComboBox 
      ItemsSource="{Binding Path=AllTesters, Mode=OneTime}"
      SelectedItem="{Binding Path=Tester, ValidatesOnDataErrors=True}"
      Validation.ErrorTemplate="{x:Null}"
      >
            </ComboBox>
        </DataTemplate>
        <DataTemplate x:Key="TesterChannelTemplate">
            <ComboBox 
      ItemsSource="{Binding Path=AllTesterChannels, Mode=OneTime}"
      SelectedItem="{Binding Path=TesterChannel, ValidatesOnDataErrors=True}"
      Validation.ErrorTemplate="{x:Null}"
      >
            </ComboBox>
        </DataTemplate>
    </UserControl.Resources>
    <DataGrid 
      AlternationCount="2" 
      DataContext="{StaticResource ExecutorGroups}" 
      ItemContainerStyle="{StaticResource ExecutorItemStyle}"
      ItemsSource="{Binding}" AutoGenerateColumns="False" >
        <DataGrid.Columns>
            <DataGridTextColumn Header="ID"  Binding="{Binding ExecutorID}" IsReadOnly="True"/>
            <DataGridTextColumn Header="Status" Binding="{Binding Status}" IsReadOnly="True"/>
            <DataGridTextColumn Header="Description" Binding="{Binding Description}" IsReadOnly="False"/>
            <DataGridTemplateColumn Header="Start Time" CellTemplate="{StaticResource StartTimeTemplate}" CellEditingTemplate="{StaticResource EditingStartTimeTemplate}" />
            <DataGridTemplateColumn Header="End Time" CellTemplate="{StaticResource EndTimeTemplate}" CellEditingTemplate="{StaticResource EditingEndTimeTemplate}" />
            <DataGridTemplateColumn Header="Battery" CellTemplate="{StaticResource BatteryTemplate}"/>
            <DataGridTemplateColumn Header="Chamber" CellTemplate="{StaticResource ChamberTemplate}"/>
            <DataGridTemplateColumn Header="Tester" CellTemplate="{StaticResource TesterTemplate}"/>
            <DataGridTemplateColumn Header="Tester Channel" CellTemplate="{StaticResource TesterChannelTemplate}"/>
            <DataGridTextColumn Header="Request ID"  Binding="{Binding RequestID}" IsReadOnly="True"/>
            <DataGridTextColumn Header="Program ID"  Binding="{Binding ProgramID}" IsReadOnly="True"/>
            <DataGridTextColumn Header="SubProgram ID"  Binding="{Binding SubProgramID}" IsReadOnly="True"/>
            <DataGridTextColumn Header="Recipe ID"  Binding="{Binding RecipeID}" IsReadOnly="True"/>
            <!--The Email property contains a URI.  For example "mailto:lucy0@adventure-works.com"
            <DataGridHyperlinkColumn Header="Email" Binding="{Binding Email}"  ContentBinding="{Binding Email, Converter={StaticResource EmailConverter}}" />
            <DataGridCheckBoxColumn Header="Member?" Binding="{Binding IsMember}" />
            <DataGridComboBoxColumn Header="Order Status"  SelectedItemBinding="{Binding Status}" ItemsSource="{Binding Source={StaticResource myEnum}}" />-->
        </DataGrid.Columns>
    </DataGrid>
    <!--
    <ListView 
      AlternationCount="2" 
      DataContext="{StaticResource ExecutorGroups}" 
      ItemContainerStyle="{StaticResource ExecutorItemStyle}"
      ItemsSource="{Binding}"
      >

        <ListView.View>
            <GridView>
                <GridViewColumn 
            Header="ID" 
            DisplayMemberBinding="{Binding Path=ExecutorID}" 
            />
                <GridViewColumn 
            Header="Status" 
            DisplayMemberBinding="{Binding Path=Status}" 
            />
                <GridViewColumn 
            Header="Description" 
            DisplayMemberBinding="{Binding Path=Description}" 
            />
                <GridViewColumn 
            Header="StartTime" 
            DisplayMemberBinding="{Binding Path=StartTime}" 
            />
                <GridViewColumn 
            Header="EndTime" 
            DisplayMemberBinding="{Binding Path=EndTime}" 
            />
                <GridViewColumn 
            Header="Battery" 
            DisplayMemberBinding="{Binding Path=Battery}" 
            />
                <GridViewColumn 
            Header="TotalNumber" 
            DisplayMemberBinding="{Binding Path=TotalNumber}" 
            />
                <GridViewColumn 
            Header="CompletedNumber" 
            DisplayMemberBinding="{Binding Path=CompletedNumber}" 
            />
                <GridViewColumn 
            Header="ExecutingNumber" 
            DisplayMemberBinding="{Binding Path=ExecutingNumber}" 
            />
                <GridViewColumn 
            Header="WaitingNumber" 
            DisplayMemberBinding="{Binding Path=WaitingNumber}" 
            />
                <GridViewColumn 
            Header="AbandonedNumber" 
            DisplayMemberBinding="{Binding Path=AbandonedNumber}" 
            />
                <GridViewColumn 
            Header="InvalidNumber" 
            DisplayMemberBinding="{Binding Path=InvalidNumber}" 
            />
                <GridViewColumn 
            Header="InvalidRate" 
            DisplayMemberBinding="{Binding Path=InvalidRate}" 
            />
            </GridView>
        </ListView.View>
    </ListView>-->
</UserControl>
